#include <iostream>
#include <vector>
using namespace std;

int N;

bool attack(int i, int j, vector<vector<int>>& board) {
    for (int k = 0; k < N; ++k) {
        if (board[i][k] == 1 || board[k][j] == 1)
            return true;
    }
    
    for (int k = 0; k < N; ++k) {
        for (int l = 0; l < N; ++l) {
            if ((k + l == i + j) || (k - l == i - j)) {
                if (board[k][l] == 1)
                    return true;
            }
        }
    }
    
    return false;
}

bool N_queens(int n, vector<vector<int>>& board) {
    if (n == 0)
        return true;
    
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            if (!attack(i, j, board) && board[i][j] != 1) {
                board[i][j] = 1;
                if (N_queens(n - 1, board))
                    return true;
                board[i][j] = 0;
            }
        }
    }
    
    return false;
}

int main() {
    cout << "Enter the number of queens: ";
    cin >> N;
    
    vector<vector<int>> board(N, vector<int>(N, 0));
    
    N_queens(N, board);
    
    cout << "Chessboard:\n";
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
    
    return 0;
}
